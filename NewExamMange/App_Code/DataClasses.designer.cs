#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NewExam")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertAuthority(Authority instance);
  partial void UpdateAuthority(Authority instance);
  partial void DeleteAuthority(Authority instance);
  partial void InsertTopicSource(TopicSource instance);
  partial void UpdateTopicSource(TopicSource instance);
  partial void DeleteTopicSource(TopicSource instance);
  partial void InsertClass(Class instance);
  partial void UpdateClass(Class instance);
  partial void DeleteClass(Class instance);
  partial void InsertExam(Exam instance);
  partial void UpdateExam(Exam instance);
  partial void DeleteExam(Exam instance);
  partial void InsertExamType(ExamType instance);
  partial void UpdateExamType(ExamType instance);
  partial void DeleteExamType(ExamType instance);
  partial void InsertFirstPoint(FirstPoint instance);
  partial void UpdateFirstPoint(FirstPoint instance);
  partial void DeleteFirstPoint(FirstPoint instance);
  partial void InsertInvigilate(Invigilate instance);
  partial void UpdateInvigilate(Invigilate instance);
  partial void DeleteInvigilate(Invigilate instance);
  partial void InsertPaper(Paper instance);
  partial void UpdatePaper(Paper instance);
  partial void DeletePaper(Paper instance);
  partial void InsertPaperDetail(PaperDetail instance);
  partial void UpdatePaperDetail(PaperDetail instance);
  partial void DeletePaperDetail(PaperDetail instance);
  partial void InsertPracticalTopic(PracticalTopic instance);
  partial void UpdatePracticalTopic(PracticalTopic instance);
  partial void DeletePracticalTopic(PracticalTopic instance);
  partial void InsertSecondPoint(SecondPoint instance);
  partial void UpdateSecondPoint(SecondPoint instance);
  partial void DeleteSecondPoint(SecondPoint instance);
  partial void InsertSort(Sort instance);
  partial void UpdateSort(Sort instance);
  partial void DeleteSort(Sort instance);
  partial void InsertStudent(Student instance);
  partial void UpdateStudent(Student instance);
  partial void DeleteStudent(Student instance);
  partial void InsertStuExam(StuExam instance);
  partial void UpdateStuExam(StuExam instance);
  partial void DeleteStuExam(StuExam instance);
  partial void InsertStuPaper(StuPaper instance);
  partial void UpdateStuPaper(StuPaper instance);
  partial void DeleteStuPaper(StuPaper instance);
  partial void InsertTeaAuthority(TeaAuthority instance);
  partial void UpdateTeaAuthority(TeaAuthority instance);
  partial void DeleteTeaAuthority(TeaAuthority instance);
  partial void InsertTeacher(Teacher instance);
  partial void UpdateTeacher(Teacher instance);
  partial void DeleteTeacher(Teacher instance);
  partial void InsertTheExam(TheExam instance);
  partial void UpdateTheExam(TheExam instance);
  partial void DeleteTheExam(TheExam instance);
  partial void InsertTopic(Topic instance);
  partial void UpdateTopic(Topic instance);
  partial void DeleteTopic(Topic instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NewExamConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Authority> Authority
	{
		get
		{
			return this.GetTable<Authority>();
		}
	}
	
	public System.Data.Linq.Table<TopicSource> TopicSource
	{
		get
		{
			return this.GetTable<TopicSource>();
		}
	}
	
	public System.Data.Linq.Table<Class> Class
	{
		get
		{
			return this.GetTable<Class>();
		}
	}
	
	public System.Data.Linq.Table<Exam> Exam
	{
		get
		{
			return this.GetTable<Exam>();
		}
	}
	
	public System.Data.Linq.Table<ExamType> ExamType
	{
		get
		{
			return this.GetTable<ExamType>();
		}
	}
	
	public System.Data.Linq.Table<FirstPoint> FirstPoint
	{
		get
		{
			return this.GetTable<FirstPoint>();
		}
	}
	
	public System.Data.Linq.Table<Invigilate> Invigilate
	{
		get
		{
			return this.GetTable<Invigilate>();
		}
	}
	
	public System.Data.Linq.Table<Paper> Paper
	{
		get
		{
			return this.GetTable<Paper>();
		}
	}
	
	public System.Data.Linq.Table<PaperDetail> PaperDetail
	{
		get
		{
			return this.GetTable<PaperDetail>();
		}
	}
	
	public System.Data.Linq.Table<PracticalTopic> PracticalTopic
	{
		get
		{
			return this.GetTable<PracticalTopic>();
		}
	}
	
	public System.Data.Linq.Table<SecondPoint> SecondPoint
	{
		get
		{
			return this.GetTable<SecondPoint>();
		}
	}
	
	public System.Data.Linq.Table<Sort> Sort
	{
		get
		{
			return this.GetTable<Sort>();
		}
	}
	
	public System.Data.Linq.Table<Student> Student
	{
		get
		{
			return this.GetTable<Student>();
		}
	}
	
	public System.Data.Linq.Table<StuExam> StuExam
	{
		get
		{
			return this.GetTable<StuExam>();
		}
	}
	
	public System.Data.Linq.Table<StuPaper> StuPaper
	{
		get
		{
			return this.GetTable<StuPaper>();
		}
	}
	
	public System.Data.Linq.Table<TeaAuthority> TeaAuthority
	{
		get
		{
			return this.GetTable<TeaAuthority>();
		}
	}
	
	public System.Data.Linq.Table<Teacher> Teacher
	{
		get
		{
			return this.GetTable<Teacher>();
		}
	}
	
	public System.Data.Linq.Table<TheExam> TheExam
	{
		get
		{
			return this.GetTable<TheExam>();
		}
	}
	
	public System.Data.Linq.Table<Topic> Topic
	{
		get
		{
			return this.GetTable<Topic>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_getAuthority")]
	public ISingleResult<proc_getAuthorityResult> proc_getAuthority([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tid", DbType="VarChar(30)")] string tid)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tid);
		return ((ISingleResult<proc_getAuthorityResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_UpdateTeacherById")]
	public int proc_UpdateTeacherById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TName", DbType="VarChar(20)")] string tName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TPhone", DbType="VarChar(20)")] string tPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TId", DbType="VarChar(50)")] string tId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tName, tPhone, tId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_getTeacherInfo")]
	public ISingleResult<proc_getTeacherInfoResult> proc_getTeacherInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tid", DbType="VarChar(30)")] string tid)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tid);
		return ((ISingleResult<proc_getTeacherInfoResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_LogIn")]
	public int proc_LogIn([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string uId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pwd, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> res)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uId, pwd, res);
		res = ((System.Nullable<int>)(result.GetParameterValue(2)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_ResetTeacherPwd")]
	public int proc_ResetTeacherPwd([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TPWd", DbType="VarChar(50)")] string tPWd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TId", DbType="VarChar(50)")] string tId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tPWd, tId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_selectExistTeaByTId")]
	public int proc_selectExistTeaByTId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TId", DbType="VarChar(50)")] string tId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tId);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Proc_SellectAllTeacher")]
	public ISingleResult<Proc_SellectAllTeacherResult> Proc_SellectAllTeacher()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<Proc_SellectAllTeacherResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Proc_SellectTeacherInfoByTId")]
	public ISingleResult<Proc_SellectTeacherInfoByTIdResult> Proc_SellectTeacherInfoByTId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TId", DbType="VarChar(50)")] string tId)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tId);
		return ((ISingleResult<Proc_SellectTeacherInfoByTIdResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Authority")]
public partial class Authority : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _AuthorityId;
	
	private string _AuhorityName;
	
	private System.Nullable<int> _OrderNo;
	
	private string _ImgUrl;
	
	private string _AothorityLink;
	
	private System.Nullable<int> _ParentId;
	
	private System.Nullable<int> _Leval;
	
	private System.Nullable<int> _AuthorityType;
	
	private System.Nullable<int> _AuthorityExamType;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthorityIdChanging(decimal value);
    partial void OnAuthorityIdChanged();
    partial void OnAuhorityNameChanging(string value);
    partial void OnAuhorityNameChanged();
    partial void OnOrderNoChanging(System.Nullable<int> value);
    partial void OnOrderNoChanged();
    partial void OnImgUrlChanging(string value);
    partial void OnImgUrlChanged();
    partial void OnAothorityLinkChanging(string value);
    partial void OnAothorityLinkChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnLevalChanging(System.Nullable<int> value);
    partial void OnLevalChanged();
    partial void OnAuthorityTypeChanging(System.Nullable<int> value);
    partial void OnAuthorityTypeChanged();
    partial void OnAuthorityExamTypeChanging(System.Nullable<int> value);
    partial void OnAuthorityExamTypeChanged();
    #endregion
	
	public Authority()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityId", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal AuthorityId
	{
		get
		{
			return this._AuthorityId;
		}
		set
		{
			if ((this._AuthorityId != value))
			{
				this.OnAuthorityIdChanging(value);
				this.SendPropertyChanging();
				this._AuthorityId = value;
				this.SendPropertyChanged("AuthorityId");
				this.OnAuthorityIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuhorityName", DbType="VarChar(30)")]
	public string AuhorityName
	{
		get
		{
			return this._AuhorityName;
		}
		set
		{
			if ((this._AuhorityName != value))
			{
				this.OnAuhorityNameChanging(value);
				this.SendPropertyChanging();
				this._AuhorityName = value;
				this.SendPropertyChanged("AuhorityName");
				this.OnAuhorityNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int")]
	public System.Nullable<int> OrderNo
	{
		get
		{
			return this._OrderNo;
		}
		set
		{
			if ((this._OrderNo != value))
			{
				this.OnOrderNoChanging(value);
				this.SendPropertyChanging();
				this._OrderNo = value;
				this.SendPropertyChanged("OrderNo");
				this.OnOrderNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgUrl", DbType="VarChar(100)")]
	public string ImgUrl
	{
		get
		{
			return this._ImgUrl;
		}
		set
		{
			if ((this._ImgUrl != value))
			{
				this.OnImgUrlChanging(value);
				this.SendPropertyChanging();
				this._ImgUrl = value;
				this.SendPropertyChanged("ImgUrl");
				this.OnImgUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AothorityLink", DbType="VarChar(100)")]
	public string AothorityLink
	{
		get
		{
			return this._AothorityLink;
		}
		set
		{
			if ((this._AothorityLink != value))
			{
				this.OnAothorityLinkChanging(value);
				this.SendPropertyChanging();
				this._AothorityLink = value;
				this.SendPropertyChanged("AothorityLink");
				this.OnAothorityLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
	public System.Nullable<int> ParentId
	{
		get
		{
			return this._ParentId;
		}
		set
		{
			if ((this._ParentId != value))
			{
				this.OnParentIdChanging(value);
				this.SendPropertyChanging();
				this._ParentId = value;
				this.SendPropertyChanged("ParentId");
				this.OnParentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leval", DbType="Int")]
	public System.Nullable<int> Leval
	{
		get
		{
			return this._Leval;
		}
		set
		{
			if ((this._Leval != value))
			{
				this.OnLevalChanging(value);
				this.SendPropertyChanging();
				this._Leval = value;
				this.SendPropertyChanged("Leval");
				this.OnLevalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityType", DbType="Int")]
	public System.Nullable<int> AuthorityType
	{
		get
		{
			return this._AuthorityType;
		}
		set
		{
			if ((this._AuthorityType != value))
			{
				this.OnAuthorityTypeChanging(value);
				this.SendPropertyChanging();
				this._AuthorityType = value;
				this.SendPropertyChanged("AuthorityType");
				this.OnAuthorityTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityExamType", DbType="Int")]
	public System.Nullable<int> AuthorityExamType
	{
		get
		{
			return this._AuthorityExamType;
		}
		set
		{
			if ((this._AuthorityExamType != value))
			{
				this.OnAuthorityExamTypeChanging(value);
				this.SendPropertyChanging();
				this._AuthorityExamType = value;
				this.SendPropertyChanged("AuthorityExamType");
				this.OnAuthorityExamTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TopicSource")]
public partial class TopicSource : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _TopicSourceId;
	
	private string _TopicSourceName;
	
	private System.Nullable<int> _IsChose;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTopicSourceIdChanging(int value);
    partial void OnTopicSourceIdChanged();
    partial void OnTopicSourceNameChanging(string value);
    partial void OnTopicSourceNameChanged();
    partial void OnIsChoseChanging(System.Nullable<int> value);
    partial void OnIsChoseChanged();
    #endregion
	
	public TopicSource()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicSourceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int TopicSourceId
	{
		get
		{
			return this._TopicSourceId;
		}
		set
		{
			if ((this._TopicSourceId != value))
			{
				this.OnTopicSourceIdChanging(value);
				this.SendPropertyChanging();
				this._TopicSourceId = value;
				this.SendPropertyChanged("TopicSourceId");
				this.OnTopicSourceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicSourceName", DbType="VarChar(20)")]
	public string TopicSourceName
	{
		get
		{
			return this._TopicSourceName;
		}
		set
		{
			if ((this._TopicSourceName != value))
			{
				this.OnTopicSourceNameChanging(value);
				this.SendPropertyChanging();
				this._TopicSourceName = value;
				this.SendPropertyChanged("TopicSourceName");
				this.OnTopicSourceNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChose", DbType="Int")]
	public System.Nullable<int> IsChose
	{
		get
		{
			return this._IsChose;
		}
		set
		{
			if ((this._IsChose != value))
			{
				this.OnIsChoseChanging(value);
				this.SendPropertyChanging();
				this._IsChose = value;
				this.SendPropertyChanged("IsChose");
				this.OnIsChoseChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _ClassId;
	
	private string _ClassName;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIdChanging(decimal value);
    partial void OnClassIdChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    #endregion
	
	public Class()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal ClassId
	{
		get
		{
			return this._ClassId;
		}
		set
		{
			if ((this._ClassId != value))
			{
				this.OnClassIdChanging(value);
				this.SendPropertyChanging();
				this._ClassId = value;
				this.SendPropertyChanged("ClassId");
				this.OnClassIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(50)")]
	public string ClassName
	{
		get
		{
			return this._ClassName;
		}
		set
		{
			if ((this._ClassName != value))
			{
				this.OnClassNameChanging(value);
				this.SendPropertyChanging();
				this._ClassName = value;
				this.SendPropertyChanged("ClassName");
				this.OnClassNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exam")]
public partial class Exam : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _ExamId;
	
	private System.Nullable<decimal> _TheExamId;
	
	private System.Nullable<System.DateTime> _ExamBegTime;
	
	private System.Nullable<System.DateTime> _ExamEndTime;
	
	private System.Nullable<int> _ExamPeriod;
	
	private System.Nullable<int> _NowPeriod;
	
	private System.Nullable<int> _PaperNumber;
	
	private EntitySet<Invigilate> _Invigilate;
	
	private EntitySet<StuPaper> _StuPaper;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamIdChanging(decimal value);
    partial void OnExamIdChanged();
    partial void OnTheExamIdChanging(System.Nullable<decimal> value);
    partial void OnTheExamIdChanged();
    partial void OnExamBegTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExamBegTimeChanged();
    partial void OnExamEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnExamEndTimeChanged();
    partial void OnExamPeriodChanging(System.Nullable<int> value);
    partial void OnExamPeriodChanged();
    partial void OnNowPeriodChanging(System.Nullable<int> value);
    partial void OnNowPeriodChanged();
    partial void OnPaperNumberChanging(System.Nullable<int> value);
    partial void OnPaperNumberChanged();
    #endregion
	
	public Exam()
	{
		this._Invigilate = new EntitySet<Invigilate>(new Action<Invigilate>(this.attach_Invigilate), new Action<Invigilate>(this.detach_Invigilate));
		this._StuPaper = new EntitySet<StuPaper>(new Action<StuPaper>(this.attach_StuPaper), new Action<StuPaper>(this.detach_StuPaper));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamId", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal ExamId
	{
		get
		{
			return this._ExamId;
		}
		set
		{
			if ((this._ExamId != value))
			{
				this.OnExamIdChanging(value);
				this.SendPropertyChanging();
				this._ExamId = value;
				this.SendPropertyChanged("ExamId");
				this.OnExamIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheExamId", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> TheExamId
	{
		get
		{
			return this._TheExamId;
		}
		set
		{
			if ((this._TheExamId != value))
			{
				this.OnTheExamIdChanging(value);
				this.SendPropertyChanging();
				this._TheExamId = value;
				this.SendPropertyChanged("TheExamId");
				this.OnTheExamIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamBegTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExamBegTime
	{
		get
		{
			return this._ExamBegTime;
		}
		set
		{
			if ((this._ExamBegTime != value))
			{
				this.OnExamBegTimeChanging(value);
				this.SendPropertyChanging();
				this._ExamBegTime = value;
				this.SendPropertyChanged("ExamBegTime");
				this.OnExamBegTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamEndTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> ExamEndTime
	{
		get
		{
			return this._ExamEndTime;
		}
		set
		{
			if ((this._ExamEndTime != value))
			{
				this.OnExamEndTimeChanging(value);
				this.SendPropertyChanging();
				this._ExamEndTime = value;
				this.SendPropertyChanged("ExamEndTime");
				this.OnExamEndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamPeriod", DbType="Int")]
	public System.Nullable<int> ExamPeriod
	{
		get
		{
			return this._ExamPeriod;
		}
		set
		{
			if ((this._ExamPeriod != value))
			{
				this.OnExamPeriodChanging(value);
				this.SendPropertyChanging();
				this._ExamPeriod = value;
				this.SendPropertyChanged("ExamPeriod");
				this.OnExamPeriodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NowPeriod", DbType="Int")]
	public System.Nullable<int> NowPeriod
	{
		get
		{
			return this._NowPeriod;
		}
		set
		{
			if ((this._NowPeriod != value))
			{
				this.OnNowPeriodChanging(value);
				this.SendPropertyChanging();
				this._NowPeriod = value;
				this.SendPropertyChanged("NowPeriod");
				this.OnNowPeriodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaperNumber", DbType="Int")]
	public System.Nullable<int> PaperNumber
	{
		get
		{
			return this._PaperNumber;
		}
		set
		{
			if ((this._PaperNumber != value))
			{
				this.OnPaperNumberChanging(value);
				this.SendPropertyChanging();
				this._PaperNumber = value;
				this.SendPropertyChanged("PaperNumber");
				this.OnPaperNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_Invigilate", Storage="_Invigilate", ThisKey="ExamId", OtherKey="ExamId")]
	public EntitySet<Invigilate> Invigilate
	{
		get
		{
			return this._Invigilate;
		}
		set
		{
			this._Invigilate.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_StuPaper", Storage="_StuPaper", ThisKey="ExamId", OtherKey="ExamId")]
	public EntitySet<StuPaper> StuPaper
	{
		get
		{
			return this._StuPaper;
		}
		set
		{
			this._StuPaper.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Invigilate(Invigilate entity)
	{
		this.SendPropertyChanging();
		entity.Exam = this;
	}
	
	private void detach_Invigilate(Invigilate entity)
	{
		this.SendPropertyChanging();
		entity.Exam = null;
	}
	
	private void attach_StuPaper(StuPaper entity)
	{
		this.SendPropertyChanging();
		entity.Exam = this;
	}
	
	private void detach_StuPaper(StuPaper entity)
	{
		this.SendPropertyChanging();
		entity.Exam = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamType")]
public partial class ExamType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ExamTypeId;
	
	private string _ExamTypeName;
	
	private System.Nullable<int> _IsChose;
	
	private System.Nullable<int> _ExamTypeFlag;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamTypeIdChanging(int value);
    partial void OnExamTypeIdChanged();
    partial void OnExamTypeNameChanging(string value);
    partial void OnExamTypeNameChanged();
    partial void OnIsChoseChanging(System.Nullable<int> value);
    partial void OnIsChoseChanged();
    partial void OnExamTypeFlagChanging(System.Nullable<int> value);
    partial void OnExamTypeFlagChanged();
    #endregion
	
	public ExamType()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ExamTypeId
	{
		get
		{
			return this._ExamTypeId;
		}
		set
		{
			if ((this._ExamTypeId != value))
			{
				this.OnExamTypeIdChanging(value);
				this.SendPropertyChanging();
				this._ExamTypeId = value;
				this.SendPropertyChanged("ExamTypeId");
				this.OnExamTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeName", DbType="VarChar(50)")]
	public string ExamTypeName
	{
		get
		{
			return this._ExamTypeName;
		}
		set
		{
			if ((this._ExamTypeName != value))
			{
				this.OnExamTypeNameChanging(value);
				this.SendPropertyChanging();
				this._ExamTypeName = value;
				this.SendPropertyChanged("ExamTypeName");
				this.OnExamTypeNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChose", DbType="Int")]
	public System.Nullable<int> IsChose
	{
		get
		{
			return this._IsChose;
		}
		set
		{
			if ((this._IsChose != value))
			{
				this.OnIsChoseChanging(value);
				this.SendPropertyChanging();
				this._IsChose = value;
				this.SendPropertyChanged("IsChose");
				this.OnIsChoseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamTypeFlag", DbType="Int")]
	public System.Nullable<int> ExamTypeFlag
	{
		get
		{
			return this._ExamTypeFlag;
		}
		set
		{
			if ((this._ExamTypeFlag != value))
			{
				this.OnExamTypeFlagChanging(value);
				this.SendPropertyChanging();
				this._ExamTypeFlag = value;
				this.SendPropertyChanged("ExamTypeFlag");
				this.OnExamTypeFlagChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FirstPoint")]
public partial class FirstPoint : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _FirstPointId;
	
	private string _FirstPointName;
	
	private System.Nullable<int> _FirstPointOrder;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFirstPointIdChanging(decimal value);
    partial void OnFirstPointIdChanged();
    partial void OnFirstPointNameChanging(string value);
    partial void OnFirstPointNameChanged();
    partial void OnFirstPointOrderChanging(System.Nullable<int> value);
    partial void OnFirstPointOrderChanged();
    #endregion
	
	public FirstPoint()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstPointId", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal FirstPointId
	{
		get
		{
			return this._FirstPointId;
		}
		set
		{
			if ((this._FirstPointId != value))
			{
				this.OnFirstPointIdChanging(value);
				this.SendPropertyChanging();
				this._FirstPointId = value;
				this.SendPropertyChanged("FirstPointId");
				this.OnFirstPointIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstPointName", DbType="VarChar(50)")]
	public string FirstPointName
	{
		get
		{
			return this._FirstPointName;
		}
		set
		{
			if ((this._FirstPointName != value))
			{
				this.OnFirstPointNameChanging(value);
				this.SendPropertyChanging();
				this._FirstPointName = value;
				this.SendPropertyChanged("FirstPointName");
				this.OnFirstPointNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstPointOrder", DbType="Int")]
	public System.Nullable<int> FirstPointOrder
	{
		get
		{
			return this._FirstPointOrder;
		}
		set
		{
			if ((this._FirstPointOrder != value))
			{
				this.OnFirstPointOrderChanging(value);
				this.SendPropertyChanging();
				this._FirstPointOrder = value;
				this.SendPropertyChanged("FirstPointOrder");
				this.OnFirstPointOrderChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invigilate")]
public partial class Invigilate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _ExamId;
	
	private string _TId;
	
	private string _ExamRoomName;
	
	private string _ExamRoomPosition;
	
	private string _OtherTeacher;
	
	private EntityRef<Exam> _Exam;
	
	private EntityRef<Teacher> _Teacher;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExamIdChanging(decimal value);
    partial void OnExamIdChanged();
    partial void OnTIdChanging(string value);
    partial void OnTIdChanged();
    partial void OnExamRoomNameChanging(string value);
    partial void OnExamRoomNameChanged();
    partial void OnExamRoomPositionChanging(string value);
    partial void OnExamRoomPositionChanged();
    partial void OnOtherTeacherChanging(string value);
    partial void OnOtherTeacherChanged();
    #endregion
	
	public Invigilate()
	{
		this._Exam = default(EntityRef<Exam>);
		this._Teacher = default(EntityRef<Teacher>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamId", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
	public decimal ExamId
	{
		get
		{
			return this._ExamId;
		}
		set
		{
			if ((this._ExamId != value))
			{
				if (this._Exam.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnExamIdChanging(value);
				this.SendPropertyChanging();
				this._ExamId = value;
				this.SendPropertyChanged("ExamId");
				this.OnExamIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string TId
	{
		get
		{
			return this._TId;
		}
		set
		{
			if ((this._TId != value))
			{
				if (this._Teacher.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTIdChanging(value);
				this.SendPropertyChanging();
				this._TId = value;
				this.SendPropertyChanged("TId");
				this.OnTIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRoomName", DbType="VarChar(50)")]
	public string ExamRoomName
	{
		get
		{
			return this._ExamRoomName;
		}
		set
		{
			if ((this._ExamRoomName != value))
			{
				this.OnExamRoomNameChanging(value);
				this.SendPropertyChanging();
				this._ExamRoomName = value;
				this.SendPropertyChanged("ExamRoomName");
				this.OnExamRoomNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamRoomPosition", DbType="VarChar(50)")]
	public string ExamRoomPosition
	{
		get
		{
			return this._ExamRoomPosition;
		}
		set
		{
			if ((this._ExamRoomPosition != value))
			{
				this.OnExamRoomPositionChanging(value);
				this.SendPropertyChanging();
				this._ExamRoomPosition = value;
				this.SendPropertyChanged("ExamRoomPosition");
				this.OnExamRoomPositionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherTeacher", DbType="VarChar(50)")]
	public string OtherTeacher
	{
		get
		{
			return this._OtherTeacher;
		}
		set
		{
			if ((this._OtherTeacher != value))
			{
				this.OnOtherTeacherChanging(value);
				this.SendPropertyChanging();
				this._OtherTeacher = value;
				this.SendPropertyChanged("OtherTeacher");
				this.OnOtherTeacherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_Invigilate", Storage="_Exam", ThisKey="ExamId", OtherKey="ExamId", IsForeignKey=true)]
	public Exam Exam
	{
		get
		{
			return this._Exam.Entity;
		}
		set
		{
			Exam previousValue = this._Exam.Entity;
			if (((previousValue != value) 
						|| (this._Exam.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Exam.Entity = null;
					previousValue.Invigilate.Remove(this);
				}
				this._Exam.Entity = value;
				if ((value != null))
				{
					value.Invigilate.Add(this);
					this._ExamId = value.ExamId;
				}
				else
				{
					this._ExamId = default(decimal);
				}
				this.SendPropertyChanged("Exam");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Invigilate", Storage="_Teacher", ThisKey="TId", OtherKey="TId", IsForeignKey=true)]
	public Teacher Teacher
	{
		get
		{
			return this._Teacher.Entity;
		}
		set
		{
			Teacher previousValue = this._Teacher.Entity;
			if (((previousValue != value) 
						|| (this._Teacher.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Teacher.Entity = null;
					previousValue.Invigilate.Remove(this);
				}
				this._Teacher.Entity = value;
				if ((value != null))
				{
					value.Invigilate.Add(this);
					this._TId = value.TId;
				}
				else
				{
					this._TId = default(string);
				}
				this.SendPropertyChanged("Teacher");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paper")]
public partial class Paper : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _PaperId;
	
	private System.Nullable<decimal> _ExamId;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaperIdChanging(decimal value);
    partial void OnPaperIdChanged();
    partial void OnExamIdChanging(System.Nullable<decimal> value);
    partial void OnExamIdChanged();
    #endregion
	
	public Paper()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaperId", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal PaperId
	{
		get
		{
			return this._PaperId;
		}
		set
		{
			if ((this._PaperId != value))
			{
				this.OnPaperIdChanging(value);
				this.SendPropertyChanging();
				this._PaperId = value;
				this.SendPropertyChanged("PaperId");
				this.OnPaperIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamId", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> ExamId
	{
		get
		{
			return this._ExamId;
		}
		set
		{
			if ((this._ExamId != value))
			{
				this.OnExamIdChanging(value);
				this.SendPropertyChanging();
				this._ExamId = value;
				this.SendPropertyChanged("ExamId");
				this.OnExamIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaperDetail")]
public partial class PaperDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _TopicId;
	
	private decimal _PaperId;
	
	private System.Nullable<int> _TopicScore;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTopicIdChanging(decimal value);
    partial void OnTopicIdChanged();
    partial void OnPaperIdChanging(decimal value);
    partial void OnPaperIdChanged();
    partial void OnTopicScoreChanging(System.Nullable<int> value);
    partial void OnTopicScoreChanged();
    #endregion
	
	public PaperDetail()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicId", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
	public decimal TopicId
	{
		get
		{
			return this._TopicId;
		}
		set
		{
			if ((this._TopicId != value))
			{
				this.OnTopicIdChanging(value);
				this.SendPropertyChanging();
				this._TopicId = value;
				this.SendPropertyChanged("TopicId");
				this.OnTopicIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaperId", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
	public decimal PaperId
	{
		get
		{
			return this._PaperId;
		}
		set
		{
			if ((this._PaperId != value))
			{
				this.OnPaperIdChanging(value);
				this.SendPropertyChanging();
				this._PaperId = value;
				this.SendPropertyChanged("PaperId");
				this.OnPaperIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicScore", DbType="Int")]
	public System.Nullable<int> TopicScore
	{
		get
		{
			return this._TopicScore;
		}
		set
		{
			if ((this._TopicScore != value))
			{
				this.OnTopicScoreChanging(value);
				this.SendPropertyChanging();
				this._TopicScore = value;
				this.SendPropertyChanged("TopicScore");
				this.OnTopicScoreChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PracticalTopic")]
public partial class PracticalTopic : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Tid;
	
	private string _TopicPath;
	
	private System.Nullable<int> _TopicState;
	
	private string _TopicDesc;
	
	private string _TopicName;
	
	private System.Nullable<System.DateTime> _TopicUpTime;
	
	private System.Nullable<int> _Chose;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTidChanging(int value);
    partial void OnTidChanged();
    partial void OnTopicPathChanging(string value);
    partial void OnTopicPathChanged();
    partial void OnTopicStateChanging(System.Nullable<int> value);
    partial void OnTopicStateChanged();
    partial void OnTopicDescChanging(string value);
    partial void OnTopicDescChanged();
    partial void OnTopicNameChanging(string value);
    partial void OnTopicNameChanged();
    partial void OnTopicUpTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTopicUpTimeChanged();
    partial void OnChoseChanging(System.Nullable<int> value);
    partial void OnChoseChanged();
    #endregion
	
	public PracticalTopic()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Tid
	{
		get
		{
			return this._Tid;
		}
		set
		{
			if ((this._Tid != value))
			{
				this.OnTidChanging(value);
				this.SendPropertyChanging();
				this._Tid = value;
				this.SendPropertyChanged("Tid");
				this.OnTidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicPath", DbType="VarChar(100)")]
	public string TopicPath
	{
		get
		{
			return this._TopicPath;
		}
		set
		{
			if ((this._TopicPath != value))
			{
				this.OnTopicPathChanging(value);
				this.SendPropertyChanging();
				this._TopicPath = value;
				this.SendPropertyChanged("TopicPath");
				this.OnTopicPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicState", DbType="Int")]
	public System.Nullable<int> TopicState
	{
		get
		{
			return this._TopicState;
		}
		set
		{
			if ((this._TopicState != value))
			{
				this.OnTopicStateChanging(value);
				this.SendPropertyChanging();
				this._TopicState = value;
				this.SendPropertyChanged("TopicState");
				this.OnTopicStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicDesc", DbType="VarChar(1000)")]
	public string TopicDesc
	{
		get
		{
			return this._TopicDesc;
		}
		set
		{
			if ((this._TopicDesc != value))
			{
				this.OnTopicDescChanging(value);
				this.SendPropertyChanging();
				this._TopicDesc = value;
				this.SendPropertyChanged("TopicDesc");
				this.OnTopicDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicName", DbType="VarChar(100)")]
	public string TopicName
	{
		get
		{
			return this._TopicName;
		}
		set
		{
			if ((this._TopicName != value))
			{
				this.OnTopicNameChanging(value);
				this.SendPropertyChanging();
				this._TopicName = value;
				this.SendPropertyChanged("TopicName");
				this.OnTopicNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicUpTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> TopicUpTime
	{
		get
		{
			return this._TopicUpTime;
		}
		set
		{
			if ((this._TopicUpTime != value))
			{
				this.OnTopicUpTimeChanging(value);
				this.SendPropertyChanging();
				this._TopicUpTime = value;
				this.SendPropertyChanged("TopicUpTime");
				this.OnTopicUpTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chose", DbType="Int")]
	public System.Nullable<int> Chose
	{
		get
		{
			return this._Chose;
		}
		set
		{
			if ((this._Chose != value))
			{
				this.OnChoseChanging(value);
				this.SendPropertyChanging();
				this._Chose = value;
				this.SendPropertyChanged("Chose");
				this.OnChoseChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SecondPoint")]
public partial class SecondPoint : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _SecondPointId;
	
	private System.Nullable<decimal> _FIrstPointId;
	
	private string _SecondPointName;
	
	private System.Nullable<int> _SecondPointOrder;
	
	private System.Nullable<int> _IsChose;
	
	private System.Nullable<int> _choseNumber;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSecondPointIdChanging(decimal value);
    partial void OnSecondPointIdChanged();
    partial void OnFIrstPointIdChanging(System.Nullable<decimal> value);
    partial void OnFIrstPointIdChanged();
    partial void OnSecondPointNameChanging(string value);
    partial void OnSecondPointNameChanged();
    partial void OnSecondPointOrderChanging(System.Nullable<int> value);
    partial void OnSecondPointOrderChanged();
    partial void OnIsChoseChanging(System.Nullable<int> value);
    partial void OnIsChoseChanged();
    partial void OnchoseNumberChanging(System.Nullable<int> value);
    partial void OnchoseNumberChanged();
    #endregion
	
	public SecondPoint()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondPointId", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal SecondPointId
	{
		get
		{
			return this._SecondPointId;
		}
		set
		{
			if ((this._SecondPointId != value))
			{
				this.OnSecondPointIdChanging(value);
				this.SendPropertyChanging();
				this._SecondPointId = value;
				this.SendPropertyChanged("SecondPointId");
				this.OnSecondPointIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIrstPointId", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> FIrstPointId
	{
		get
		{
			return this._FIrstPointId;
		}
		set
		{
			if ((this._FIrstPointId != value))
			{
				this.OnFIrstPointIdChanging(value);
				this.SendPropertyChanging();
				this._FIrstPointId = value;
				this.SendPropertyChanged("FIrstPointId");
				this.OnFIrstPointIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondPointName", DbType="VarChar(50)")]
	public string SecondPointName
	{
		get
		{
			return this._SecondPointName;
		}
		set
		{
			if ((this._SecondPointName != value))
			{
				this.OnSecondPointNameChanging(value);
				this.SendPropertyChanging();
				this._SecondPointName = value;
				this.SendPropertyChanged("SecondPointName");
				this.OnSecondPointNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondPointOrder", DbType="Int")]
	public System.Nullable<int> SecondPointOrder
	{
		get
		{
			return this._SecondPointOrder;
		}
		set
		{
			if ((this._SecondPointOrder != value))
			{
				this.OnSecondPointOrderChanging(value);
				this.SendPropertyChanging();
				this._SecondPointOrder = value;
				this.SendPropertyChanged("SecondPointOrder");
				this.OnSecondPointOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsChose", DbType="Int")]
	public System.Nullable<int> IsChose
	{
		get
		{
			return this._IsChose;
		}
		set
		{
			if ((this._IsChose != value))
			{
				this.OnIsChoseChanging(value);
				this.SendPropertyChanging();
				this._IsChose = value;
				this.SendPropertyChanged("IsChose");
				this.OnIsChoseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_choseNumber", DbType="Int")]
	public System.Nullable<int> choseNumber
	{
		get
		{
			return this._choseNumber;
		}
		set
		{
			if ((this._choseNumber != value))
			{
				this.OnchoseNumberChanging(value);
				this.SendPropertyChanging();
				this._choseNumber = value;
				this.SendPropertyChanged("choseNumber");
				this.OnchoseNumberChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sort")]
public partial class Sort : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _SortId;
	
	private System.Nullable<int> _SortOrder;
	
	private string _SortName;
	
	private System.Nullable<int> _TopicSortScore;
	
	private System.Nullable<int> _TopicSortNumber;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSortIdChanging(decimal value);
    partial void OnSortIdChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnSortNameChanging(string value);
    partial void OnSortNameChanged();
    partial void OnTopicSortScoreChanging(System.Nullable<int> value);
    partial void OnTopicSortScoreChanged();
    partial void OnTopicSortNumberChanging(System.Nullable<int> value);
    partial void OnTopicSortNumberChanged();
    #endregion
	
	public Sort()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortId", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal SortId
	{
		get
		{
			return this._SortId;
		}
		set
		{
			if ((this._SortId != value))
			{
				this.OnSortIdChanging(value);
				this.SendPropertyChanging();
				this._SortId = value;
				this.SendPropertyChanged("SortId");
				this.OnSortIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
	public System.Nullable<int> SortOrder
	{
		get
		{
			return this._SortOrder;
		}
		set
		{
			if ((this._SortOrder != value))
			{
				this.OnSortOrderChanging(value);
				this.SendPropertyChanging();
				this._SortOrder = value;
				this.SendPropertyChanged("SortOrder");
				this.OnSortOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortName", DbType="VarChar(100)")]
	public string SortName
	{
		get
		{
			return this._SortName;
		}
		set
		{
			if ((this._SortName != value))
			{
				this.OnSortNameChanging(value);
				this.SendPropertyChanging();
				this._SortName = value;
				this.SendPropertyChanged("SortName");
				this.OnSortNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicSortScore", DbType="Int")]
	public System.Nullable<int> TopicSortScore
	{
		get
		{
			return this._TopicSortScore;
		}
		set
		{
			if ((this._TopicSortScore != value))
			{
				this.OnTopicSortScoreChanging(value);
				this.SendPropertyChanging();
				this._TopicSortScore = value;
				this.SendPropertyChanged("TopicSortScore");
				this.OnTopicSortScoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicSortNumber", DbType="Int")]
	public System.Nullable<int> TopicSortNumber
	{
		get
		{
			return this._TopicSortNumber;
		}
		set
		{
			if ((this._TopicSortNumber != value))
			{
				this.OnTopicSortNumberChanging(value);
				this.SendPropertyChanging();
				this._TopicSortNumber = value;
				this.SendPropertyChanged("TopicSortNumber");
				this.OnTopicSortNumberChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _StudentId;
	
	private string _StudentName;
	
	private string _StudentPhone;
	
	private string _StuImage;
	
	private string _Class;
	
	private System.Nullable<System.DateTime> _RegisterTime;
	
	private System.Nullable<int> _StudentState;
	
	private System.Nullable<int> _StuExamState;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIdChanging(string value);
    partial void OnStudentIdChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnStudentPhoneChanging(string value);
    partial void OnStudentPhoneChanged();
    partial void OnStuImageChanging(string value);
    partial void OnStuImageChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnRegisterTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterTimeChanged();
    partial void OnStudentStateChanging(System.Nullable<int> value);
    partial void OnStudentStateChanged();
    partial void OnStuExamStateChanging(System.Nullable<int> value);
    partial void OnStuExamStateChanged();
    #endregion
	
	public Student()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string StudentId
	{
		get
		{
			return this._StudentId;
		}
		set
		{
			if ((this._StudentId != value))
			{
				this.OnStudentIdChanging(value);
				this.SendPropertyChanging();
				this._StudentId = value;
				this.SendPropertyChanged("StudentId");
				this.OnStudentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="VarChar(30)")]
	public string StudentName
	{
		get
		{
			return this._StudentName;
		}
		set
		{
			if ((this._StudentName != value))
			{
				this.OnStudentNameChanging(value);
				this.SendPropertyChanging();
				this._StudentName = value;
				this.SendPropertyChanged("StudentName");
				this.OnStudentNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentPhone", DbType="VarChar(30)")]
	public string StudentPhone
	{
		get
		{
			return this._StudentPhone;
		}
		set
		{
			if ((this._StudentPhone != value))
			{
				this.OnStudentPhoneChanging(value);
				this.SendPropertyChanging();
				this._StudentPhone = value;
				this.SendPropertyChanged("StudentPhone");
				this.OnStudentPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuImage", DbType="VarChar(200)")]
	public string StuImage
	{
		get
		{
			return this._StuImage;
		}
		set
		{
			if ((this._StuImage != value))
			{
				this.OnStuImageChanging(value);
				this.SendPropertyChanging();
				this._StuImage = value;
				this.SendPropertyChanged("StuImage");
				this.OnStuImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="VarChar(100)")]
	public string Class
	{
		get
		{
			return this._Class;
		}
		set
		{
			if ((this._Class != value))
			{
				this.OnClassChanging(value);
				this.SendPropertyChanging();
				this._Class = value;
				this.SendPropertyChanged("Class");
				this.OnClassChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegisterTime
	{
		get
		{
			return this._RegisterTime;
		}
		set
		{
			if ((this._RegisterTime != value))
			{
				this.OnRegisterTimeChanging(value);
				this.SendPropertyChanging();
				this._RegisterTime = value;
				this.SendPropertyChanged("RegisterTime");
				this.OnRegisterTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentState", DbType="Int")]
	public System.Nullable<int> StudentState
	{
		get
		{
			return this._StudentState;
		}
		set
		{
			if ((this._StudentState != value))
			{
				this.OnStudentStateChanging(value);
				this.SendPropertyChanging();
				this._StudentState = value;
				this.SendPropertyChanged("StudentState");
				this.OnStudentStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuExamState", DbType="Int")]
	public System.Nullable<int> StuExamState
	{
		get
		{
			return this._StuExamState;
		}
		set
		{
			if ((this._StuExamState != value))
			{
				this.OnStuExamStateChanging(value);
				this.SendPropertyChanging();
				this._StuExamState = value;
				this.SendPropertyChanged("StuExamState");
				this.OnStuExamStateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StuExam")]
public partial class StuExam : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _StudentId;
	
	private decimal _PaperId;
	
	private string _TId;
	
	private string _IPAddress;
	
	private System.Nullable<int> _Score;
	
	private System.Nullable<System.DateTime> _ReplyEndTime;
	
	private System.Nullable<System.DateTime> _BeginExamTIme;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIdChanging(string value);
    partial void OnStudentIdChanged();
    partial void OnPaperIdChanging(decimal value);
    partial void OnPaperIdChanged();
    partial void OnTIdChanging(string value);
    partial void OnTIdChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnScoreChanging(System.Nullable<int> value);
    partial void OnScoreChanged();
    partial void OnReplyEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReplyEndTimeChanged();
    partial void OnBeginExamTImeChanging(System.Nullable<System.DateTime> value);
    partial void OnBeginExamTImeChanged();
    #endregion
	
	public StuExam()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string StudentId
	{
		get
		{
			return this._StudentId;
		}
		set
		{
			if ((this._StudentId != value))
			{
				this.OnStudentIdChanging(value);
				this.SendPropertyChanging();
				this._StudentId = value;
				this.SendPropertyChanged("StudentId");
				this.OnStudentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaperId", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
	public decimal PaperId
	{
		get
		{
			return this._PaperId;
		}
		set
		{
			if ((this._PaperId != value))
			{
				this.OnPaperIdChanging(value);
				this.SendPropertyChanging();
				this._PaperId = value;
				this.SendPropertyChanged("PaperId");
				this.OnPaperIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string TId
	{
		get
		{
			return this._TId;
		}
		set
		{
			if ((this._TId != value))
			{
				this.OnTIdChanging(value);
				this.SendPropertyChanging();
				this._TId = value;
				this.SendPropertyChanged("TId");
				this.OnTIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(50)")]
	public string IPAddress
	{
		get
		{
			return this._IPAddress;
		}
		set
		{
			if ((this._IPAddress != value))
			{
				this.OnIPAddressChanging(value);
				this.SendPropertyChanging();
				this._IPAddress = value;
				this.SendPropertyChanged("IPAddress");
				this.OnIPAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Int")]
	public System.Nullable<int> Score
	{
		get
		{
			return this._Score;
		}
		set
		{
			if ((this._Score != value))
			{
				this.OnScoreChanging(value);
				this.SendPropertyChanging();
				this._Score = value;
				this.SendPropertyChanged("Score");
				this.OnScoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyEndTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> ReplyEndTime
	{
		get
		{
			return this._ReplyEndTime;
		}
		set
		{
			if ((this._ReplyEndTime != value))
			{
				this.OnReplyEndTimeChanging(value);
				this.SendPropertyChanging();
				this._ReplyEndTime = value;
				this.SendPropertyChanged("ReplyEndTime");
				this.OnReplyEndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginExamTIme", DbType="DateTime")]
	public System.Nullable<System.DateTime> BeginExamTIme
	{
		get
		{
			return this._BeginExamTIme;
		}
		set
		{
			if ((this._BeginExamTIme != value))
			{
				this.OnBeginExamTImeChanging(value);
				this.SendPropertyChanging();
				this._BeginExamTIme = value;
				this.SendPropertyChanged("BeginExamTIme");
				this.OnBeginExamTImeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StuPaper")]
public partial class StuPaper : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _TopicId;
	
	private string _StudentId;
	
	private string _StuAnswer;
	
	private decimal _ExamId;
	
	private string _stuAnsPath;
	
	private EntityRef<Exam> _Exam;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTopicIdChanging(decimal value);
    partial void OnTopicIdChanged();
    partial void OnStudentIdChanging(string value);
    partial void OnStudentIdChanged();
    partial void OnStuAnswerChanging(string value);
    partial void OnStuAnswerChanged();
    partial void OnExamIdChanging(decimal value);
    partial void OnExamIdChanged();
    partial void OnstuAnsPathChanging(string value);
    partial void OnstuAnsPathChanged();
    #endregion
	
	public StuPaper()
	{
		this._Exam = default(EntityRef<Exam>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicId", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
	public decimal TopicId
	{
		get
		{
			return this._TopicId;
		}
		set
		{
			if ((this._TopicId != value))
			{
				this.OnTopicIdChanging(value);
				this.SendPropertyChanging();
				this._TopicId = value;
				this.SendPropertyChanged("TopicId");
				this.OnTopicIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string StudentId
	{
		get
		{
			return this._StudentId;
		}
		set
		{
			if ((this._StudentId != value))
			{
				this.OnStudentIdChanging(value);
				this.SendPropertyChanging();
				this._StudentId = value;
				this.SendPropertyChanged("StudentId");
				this.OnStudentIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StuAnswer", DbType="VarChar(200)")]
	public string StuAnswer
	{
		get
		{
			return this._StuAnswer;
		}
		set
		{
			if ((this._StuAnswer != value))
			{
				this.OnStuAnswerChanging(value);
				this.SendPropertyChanging();
				this._StuAnswer = value;
				this.SendPropertyChanged("StuAnswer");
				this.OnStuAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamId", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
	public decimal ExamId
	{
		get
		{
			return this._ExamId;
		}
		set
		{
			if ((this._ExamId != value))
			{
				if (this._Exam.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnExamIdChanging(value);
				this.SendPropertyChanging();
				this._ExamId = value;
				this.SendPropertyChanged("ExamId");
				this.OnExamIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuAnsPath", DbType="VarChar(150)")]
	public string stuAnsPath
	{
		get
		{
			return this._stuAnsPath;
		}
		set
		{
			if ((this._stuAnsPath != value))
			{
				this.OnstuAnsPathChanging(value);
				this.SendPropertyChanging();
				this._stuAnsPath = value;
				this.SendPropertyChanged("stuAnsPath");
				this.OnstuAnsPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exam_StuPaper", Storage="_Exam", ThisKey="ExamId", OtherKey="ExamId", IsForeignKey=true)]
	public Exam Exam
	{
		get
		{
			return this._Exam.Entity;
		}
		set
		{
			Exam previousValue = this._Exam.Entity;
			if (((previousValue != value) 
						|| (this._Exam.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Exam.Entity = null;
					previousValue.StuPaper.Remove(this);
				}
				this._Exam.Entity = value;
				if ((value != null))
				{
					value.StuPaper.Add(this);
					this._ExamId = value.ExamId;
				}
				else
				{
					this._ExamId = default(decimal);
				}
				this.SendPropertyChanged("Exam");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeaAuthority")]
public partial class TeaAuthority : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _TId;
	
	private decimal _AuthorityId;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTIdChanging(string value);
    partial void OnTIdChanged();
    partial void OnAuthorityIdChanging(decimal value);
    partial void OnAuthorityIdChanged();
    #endregion
	
	public TeaAuthority()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string TId
	{
		get
		{
			return this._TId;
		}
		set
		{
			if ((this._TId != value))
			{
				this.OnTIdChanging(value);
				this.SendPropertyChanging();
				this._TId = value;
				this.SendPropertyChanged("TId");
				this.OnTIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityId", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
	public decimal AuthorityId
	{
		get
		{
			return this._AuthorityId;
		}
		set
		{
			if ((this._AuthorityId != value))
			{
				this.OnAuthorityIdChanging(value);
				this.SendPropertyChanging();
				this._AuthorityId = value;
				this.SendPropertyChanged("AuthorityId");
				this.OnAuthorityIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _TId;
	
	private string _TPwd;
	
	private string _TName;
	
	private string _TPhone;
	
	private System.Nullable<int> _IsAdmin;
	
	private System.Nullable<int> _TeacherState;
	
	private System.Nullable<System.DateTime> _TeacherCreateDate;
	
	private System.Nullable<int> _isExamTeacher;
	
	private EntitySet<Invigilate> _Invigilate;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTIdChanging(string value);
    partial void OnTIdChanged();
    partial void OnTPwdChanging(string value);
    partial void OnTPwdChanged();
    partial void OnTNameChanging(string value);
    partial void OnTNameChanged();
    partial void OnTPhoneChanging(string value);
    partial void OnTPhoneChanged();
    partial void OnIsAdminChanging(System.Nullable<int> value);
    partial void OnIsAdminChanged();
    partial void OnTeacherStateChanging(System.Nullable<int> value);
    partial void OnTeacherStateChanged();
    partial void OnTeacherCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTeacherCreateDateChanged();
    partial void OnisExamTeacherChanging(System.Nullable<int> value);
    partial void OnisExamTeacherChanged();
    #endregion
	
	public Teacher()
	{
		this._Invigilate = new EntitySet<Invigilate>(new Action<Invigilate>(this.attach_Invigilate), new Action<Invigilate>(this.detach_Invigilate));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string TId
	{
		get
		{
			return this._TId;
		}
		set
		{
			if ((this._TId != value))
			{
				this.OnTIdChanging(value);
				this.SendPropertyChanging();
				this._TId = value;
				this.SendPropertyChanged("TId");
				this.OnTIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPwd", DbType="VarChar(50)")]
	public string TPwd
	{
		get
		{
			return this._TPwd;
		}
		set
		{
			if ((this._TPwd != value))
			{
				this.OnTPwdChanging(value);
				this.SendPropertyChanging();
				this._TPwd = value;
				this.SendPropertyChanged("TPwd");
				this.OnTPwdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TName", DbType="VarChar(20)")]
	public string TName
	{
		get
		{
			return this._TName;
		}
		set
		{
			if ((this._TName != value))
			{
				this.OnTNameChanging(value);
				this.SendPropertyChanging();
				this._TName = value;
				this.SendPropertyChanged("TName");
				this.OnTNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPhone", DbType="VarChar(20)")]
	public string TPhone
	{
		get
		{
			return this._TPhone;
		}
		set
		{
			if ((this._TPhone != value))
			{
				this.OnTPhoneChanging(value);
				this.SendPropertyChanging();
				this._TPhone = value;
				this.SendPropertyChanged("TPhone");
				this.OnTPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Int")]
	public System.Nullable<int> IsAdmin
	{
		get
		{
			return this._IsAdmin;
		}
		set
		{
			if ((this._IsAdmin != value))
			{
				this.OnIsAdminChanging(value);
				this.SendPropertyChanging();
				this._IsAdmin = value;
				this.SendPropertyChanged("IsAdmin");
				this.OnIsAdminChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherState", DbType="Int")]
	public System.Nullable<int> TeacherState
	{
		get
		{
			return this._TeacherState;
		}
		set
		{
			if ((this._TeacherState != value))
			{
				this.OnTeacherStateChanging(value);
				this.SendPropertyChanging();
				this._TeacherState = value;
				this.SendPropertyChanged("TeacherState");
				this.OnTeacherStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> TeacherCreateDate
	{
		get
		{
			return this._TeacherCreateDate;
		}
		set
		{
			if ((this._TeacherCreateDate != value))
			{
				this.OnTeacherCreateDateChanging(value);
				this.SendPropertyChanging();
				this._TeacherCreateDate = value;
				this.SendPropertyChanged("TeacherCreateDate");
				this.OnTeacherCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isExamTeacher", DbType="Int")]
	public System.Nullable<int> isExamTeacher
	{
		get
		{
			return this._isExamTeacher;
		}
		set
		{
			if ((this._isExamTeacher != value))
			{
				this.OnisExamTeacherChanging(value);
				this.SendPropertyChanging();
				this._isExamTeacher = value;
				this.SendPropertyChanged("isExamTeacher");
				this.OnisExamTeacherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Invigilate", Storage="_Invigilate", ThisKey="TId", OtherKey="TId")]
	public EntitySet<Invigilate> Invigilate
	{
		get
		{
			return this._Invigilate;
		}
		set
		{
			this._Invigilate.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Invigilate(Invigilate entity)
	{
		this.SendPropertyChanging();
		entity.Teacher = this;
	}
	
	private void detach_Invigilate(Invigilate entity)
	{
		this.SendPropertyChanging();
		entity.Teacher = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheExam")]
public partial class TheExam : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _TheExamId;
	
	private string _TheExamName;
	
	private System.Nullable<int> _IsNowTheExam;
	
	private System.Nullable<int> _ExamType;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTheExamIdChanging(decimal value);
    partial void OnTheExamIdChanged();
    partial void OnTheExamNameChanging(string value);
    partial void OnTheExamNameChanged();
    partial void OnIsNowTheExamChanging(System.Nullable<int> value);
    partial void OnIsNowTheExamChanged();
    partial void OnExamTypeChanging(System.Nullable<int> value);
    partial void OnExamTypeChanged();
    #endregion
	
	public TheExam()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheExamId", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal TheExamId
	{
		get
		{
			return this._TheExamId;
		}
		set
		{
			if ((this._TheExamId != value))
			{
				this.OnTheExamIdChanging(value);
				this.SendPropertyChanging();
				this._TheExamId = value;
				this.SendPropertyChanged("TheExamId");
				this.OnTheExamIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheExamName", DbType="VarChar(80)")]
	public string TheExamName
	{
		get
		{
			return this._TheExamName;
		}
		set
		{
			if ((this._TheExamName != value))
			{
				this.OnTheExamNameChanging(value);
				this.SendPropertyChanging();
				this._TheExamName = value;
				this.SendPropertyChanged("TheExamName");
				this.OnTheExamNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNowTheExam", DbType="Int")]
	public System.Nullable<int> IsNowTheExam
	{
		get
		{
			return this._IsNowTheExam;
		}
		set
		{
			if ((this._IsNowTheExam != value))
			{
				this.OnIsNowTheExamChanging(value);
				this.SendPropertyChanging();
				this._IsNowTheExam = value;
				this.SendPropertyChanged("IsNowTheExam");
				this.OnIsNowTheExamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamType", DbType="Int")]
	public System.Nullable<int> ExamType
	{
		get
		{
			return this._ExamType;
		}
		set
		{
			if ((this._ExamType != value))
			{
				this.OnExamTypeChanging(value);
				this.SendPropertyChanging();
				this._ExamType = value;
				this.SendPropertyChanged("ExamType");
				this.OnExamTypeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Topic")]
public partial class Topic : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _TopicId;
	
	private System.Nullable<decimal> _SortId;
	
	private System.Nullable<decimal> _SecondPointId;
	
	private string _TopicTitle;
	
	private string _OptionA;
	
	private string _OptionB;
	
	private string _OptionC;
	
	private string _OptionD;
	
	private string _TitleAnswer;
	
	private string _TopicType;
	
	private string _SourceName;
	
	private System.Nullable<int> _IsExists;
	
	private System.Nullable<int> _IsAccept;
	
	private System.Nullable<int> _NumberOfUse;
	
	private System.Nullable<System.DateTime> _TopicCreateDate;
	
	private System.Nullable<int> _TopicState;
	
	private System.Nullable<decimal> _TopicSourceId;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTopicIdChanging(decimal value);
    partial void OnTopicIdChanged();
    partial void OnSortIdChanging(System.Nullable<decimal> value);
    partial void OnSortIdChanged();
    partial void OnSecondPointIdChanging(System.Nullable<decimal> value);
    partial void OnSecondPointIdChanged();
    partial void OnTopicTitleChanging(string value);
    partial void OnTopicTitleChanged();
    partial void OnOptionAChanging(string value);
    partial void OnOptionAChanged();
    partial void OnOptionBChanging(string value);
    partial void OnOptionBChanged();
    partial void OnOptionCChanging(string value);
    partial void OnOptionCChanged();
    partial void OnOptionDChanging(string value);
    partial void OnOptionDChanged();
    partial void OnTitleAnswerChanging(string value);
    partial void OnTitleAnswerChanged();
    partial void OnTopicTypeChanging(string value);
    partial void OnTopicTypeChanged();
    partial void OnSourceNameChanging(string value);
    partial void OnSourceNameChanged();
    partial void OnIsExistsChanging(System.Nullable<int> value);
    partial void OnIsExistsChanged();
    partial void OnIsAcceptChanging(System.Nullable<int> value);
    partial void OnIsAcceptChanged();
    partial void OnNumberOfUseChanging(System.Nullable<int> value);
    partial void OnNumberOfUseChanged();
    partial void OnTopicCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTopicCreateDateChanged();
    partial void OnTopicStateChanging(System.Nullable<int> value);
    partial void OnTopicStateChanged();
    partial void OnTopicSourceIdChanging(System.Nullable<decimal> value);
    partial void OnTopicSourceIdChanged();
    #endregion
	
	public Topic()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicId", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal TopicId
	{
		get
		{
			return this._TopicId;
		}
		set
		{
			if ((this._TopicId != value))
			{
				this.OnTopicIdChanging(value);
				this.SendPropertyChanging();
				this._TopicId = value;
				this.SendPropertyChanged("TopicId");
				this.OnTopicIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortId", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> SortId
	{
		get
		{
			return this._SortId;
		}
		set
		{
			if ((this._SortId != value))
			{
				this.OnSortIdChanging(value);
				this.SendPropertyChanging();
				this._SortId = value;
				this.SendPropertyChanged("SortId");
				this.OnSortIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondPointId", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> SecondPointId
	{
		get
		{
			return this._SecondPointId;
		}
		set
		{
			if ((this._SecondPointId != value))
			{
				this.OnSecondPointIdChanging(value);
				this.SendPropertyChanging();
				this._SecondPointId = value;
				this.SendPropertyChanged("SecondPointId");
				this.OnSecondPointIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicTitle", DbType="VarChar(500)")]
	public string TopicTitle
	{
		get
		{
			return this._TopicTitle;
		}
		set
		{
			if ((this._TopicTitle != value))
			{
				this.OnTopicTitleChanging(value);
				this.SendPropertyChanging();
				this._TopicTitle = value;
				this.SendPropertyChanged("TopicTitle");
				this.OnTopicTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionA", DbType="VarChar(500)")]
	public string OptionA
	{
		get
		{
			return this._OptionA;
		}
		set
		{
			if ((this._OptionA != value))
			{
				this.OnOptionAChanging(value);
				this.SendPropertyChanging();
				this._OptionA = value;
				this.SendPropertyChanged("OptionA");
				this.OnOptionAChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionB", DbType="VarChar(500)")]
	public string OptionB
	{
		get
		{
			return this._OptionB;
		}
		set
		{
			if ((this._OptionB != value))
			{
				this.OnOptionBChanging(value);
				this.SendPropertyChanging();
				this._OptionB = value;
				this.SendPropertyChanged("OptionB");
				this.OnOptionBChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionC", DbType="VarChar(500)")]
	public string OptionC
	{
		get
		{
			return this._OptionC;
		}
		set
		{
			if ((this._OptionC != value))
			{
				this.OnOptionCChanging(value);
				this.SendPropertyChanging();
				this._OptionC = value;
				this.SendPropertyChanged("OptionC");
				this.OnOptionCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionD", DbType="VarChar(500)")]
	public string OptionD
	{
		get
		{
			return this._OptionD;
		}
		set
		{
			if ((this._OptionD != value))
			{
				this.OnOptionDChanging(value);
				this.SendPropertyChanging();
				this._OptionD = value;
				this.SendPropertyChanged("OptionD");
				this.OnOptionDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleAnswer", DbType="VarChar(200)")]
	public string TitleAnswer
	{
		get
		{
			return this._TitleAnswer;
		}
		set
		{
			if ((this._TitleAnswer != value))
			{
				this.OnTitleAnswerChanging(value);
				this.SendPropertyChanging();
				this._TitleAnswer = value;
				this.SendPropertyChanged("TitleAnswer");
				this.OnTitleAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicType", DbType="VarChar(20)")]
	public string TopicType
	{
		get
		{
			return this._TopicType;
		}
		set
		{
			if ((this._TopicType != value))
			{
				this.OnTopicTypeChanging(value);
				this.SendPropertyChanging();
				this._TopicType = value;
				this.SendPropertyChanged("TopicType");
				this.OnTopicTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="VarChar(50)")]
	public string SourceName
	{
		get
		{
			return this._SourceName;
		}
		set
		{
			if ((this._SourceName != value))
			{
				this.OnSourceNameChanging(value);
				this.SendPropertyChanging();
				this._SourceName = value;
				this.SendPropertyChanged("SourceName");
				this.OnSourceNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExists", DbType="Int")]
	public System.Nullable<int> IsExists
	{
		get
		{
			return this._IsExists;
		}
		set
		{
			if ((this._IsExists != value))
			{
				this.OnIsExistsChanging(value);
				this.SendPropertyChanging();
				this._IsExists = value;
				this.SendPropertyChanged("IsExists");
				this.OnIsExistsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccept", DbType="Int")]
	public System.Nullable<int> IsAccept
	{
		get
		{
			return this._IsAccept;
		}
		set
		{
			if ((this._IsAccept != value))
			{
				this.OnIsAcceptChanging(value);
				this.SendPropertyChanging();
				this._IsAccept = value;
				this.SendPropertyChanged("IsAccept");
				this.OnIsAcceptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfUse", DbType="Int")]
	public System.Nullable<int> NumberOfUse
	{
		get
		{
			return this._NumberOfUse;
		}
		set
		{
			if ((this._NumberOfUse != value))
			{
				this.OnNumberOfUseChanging(value);
				this.SendPropertyChanging();
				this._NumberOfUse = value;
				this.SendPropertyChanged("NumberOfUse");
				this.OnNumberOfUseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicCreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> TopicCreateDate
	{
		get
		{
			return this._TopicCreateDate;
		}
		set
		{
			if ((this._TopicCreateDate != value))
			{
				this.OnTopicCreateDateChanging(value);
				this.SendPropertyChanging();
				this._TopicCreateDate = value;
				this.SendPropertyChanged("TopicCreateDate");
				this.OnTopicCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicState", DbType="Int")]
	public System.Nullable<int> TopicState
	{
		get
		{
			return this._TopicState;
		}
		set
		{
			if ((this._TopicState != value))
			{
				this.OnTopicStateChanging(value);
				this.SendPropertyChanging();
				this._TopicState = value;
				this.SendPropertyChanged("TopicState");
				this.OnTopicStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopicSourceId", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> TopicSourceId
	{
		get
		{
			return this._TopicSourceId;
		}
		set
		{
			if ((this._TopicSourceId != value))
			{
				this.OnTopicSourceIdChanging(value);
				this.SendPropertyChanging();
				this._TopicSourceId = value;
				this.SendPropertyChanged("TopicSourceId");
				this.OnTopicSourceIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class proc_getAuthorityResult
{
	
	private decimal _AuthorityId;
	
	private string _AuhorityName;
	
	private System.Nullable<int> _OrderNo;
	
	private string _ImgUrl;
	
	private string _AothorityLink;
	
	private System.Nullable<int> _ParentId;
	
	private System.Nullable<int> _Leval;
	
	private System.Nullable<int> _AuthorityType;
	
	private string _TId;
	
	private decimal _AuthorityId1;
	
	public proc_getAuthorityResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityId", DbType="Decimal(18,0) NOT NULL")]
	public decimal AuthorityId
	{
		get
		{
			return this._AuthorityId;
		}
		set
		{
			if ((this._AuthorityId != value))
			{
				this._AuthorityId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuhorityName", DbType="VarChar(30)")]
	public string AuhorityName
	{
		get
		{
			return this._AuhorityName;
		}
		set
		{
			if ((this._AuhorityName != value))
			{
				this._AuhorityName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int")]
	public System.Nullable<int> OrderNo
	{
		get
		{
			return this._OrderNo;
		}
		set
		{
			if ((this._OrderNo != value))
			{
				this._OrderNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgUrl", DbType="VarChar(100)")]
	public string ImgUrl
	{
		get
		{
			return this._ImgUrl;
		}
		set
		{
			if ((this._ImgUrl != value))
			{
				this._ImgUrl = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AothorityLink", DbType="VarChar(100)")]
	public string AothorityLink
	{
		get
		{
			return this._AothorityLink;
		}
		set
		{
			if ((this._AothorityLink != value))
			{
				this._AothorityLink = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
	public System.Nullable<int> ParentId
	{
		get
		{
			return this._ParentId;
		}
		set
		{
			if ((this._ParentId != value))
			{
				this._ParentId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leval", DbType="Int")]
	public System.Nullable<int> Leval
	{
		get
		{
			return this._Leval;
		}
		set
		{
			if ((this._Leval != value))
			{
				this._Leval = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityType", DbType="Int")]
	public System.Nullable<int> AuthorityType
	{
		get
		{
			return this._AuthorityType;
		}
		set
		{
			if ((this._AuthorityType != value))
			{
				this._AuthorityType = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TId
	{
		get
		{
			return this._TId;
		}
		set
		{
			if ((this._TId != value))
			{
				this._TId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityId1", DbType="Decimal(18,0) NOT NULL")]
	public decimal AuthorityId1
	{
		get
		{
			return this._AuthorityId1;
		}
		set
		{
			if ((this._AuthorityId1 != value))
			{
				this._AuthorityId1 = value;
			}
		}
	}
}

public partial class proc_getTeacherInfoResult
{
	
	private string _TId;
	
	private string _TPwd;
	
	private string _TName;
	
	private string _TPhone;
	
	private System.Nullable<int> _IsAdmin;
	
	private System.Nullable<int> _TeacherState;
	
	private System.Nullable<System.DateTime> _TeacherCreateDate;
	
	private System.Nullable<int> _isExamTeacher;
	
	public proc_getTeacherInfoResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TId
	{
		get
		{
			return this._TId;
		}
		set
		{
			if ((this._TId != value))
			{
				this._TId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPwd", DbType="VarChar(50)")]
	public string TPwd
	{
		get
		{
			return this._TPwd;
		}
		set
		{
			if ((this._TPwd != value))
			{
				this._TPwd = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TName", DbType="VarChar(20)")]
	public string TName
	{
		get
		{
			return this._TName;
		}
		set
		{
			if ((this._TName != value))
			{
				this._TName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPhone", DbType="VarChar(20)")]
	public string TPhone
	{
		get
		{
			return this._TPhone;
		}
		set
		{
			if ((this._TPhone != value))
			{
				this._TPhone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Int")]
	public System.Nullable<int> IsAdmin
	{
		get
		{
			return this._IsAdmin;
		}
		set
		{
			if ((this._IsAdmin != value))
			{
				this._IsAdmin = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherState", DbType="Int")]
	public System.Nullable<int> TeacherState
	{
		get
		{
			return this._TeacherState;
		}
		set
		{
			if ((this._TeacherState != value))
			{
				this._TeacherState = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> TeacherCreateDate
	{
		get
		{
			return this._TeacherCreateDate;
		}
		set
		{
			if ((this._TeacherCreateDate != value))
			{
				this._TeacherCreateDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isExamTeacher", DbType="Int")]
	public System.Nullable<int> isExamTeacher
	{
		get
		{
			return this._isExamTeacher;
		}
		set
		{
			if ((this._isExamTeacher != value))
			{
				this._isExamTeacher = value;
			}
		}
	}
}

public partial class Proc_SellectAllTeacherResult
{
	
	private string _TId;
	
	private string _TPwd;
	
	private string _TName;
	
	private string _TPhone;
	
	private System.Nullable<int> _IsAdmin;
	
	private System.Nullable<int> _TeacherState;
	
	private System.Nullable<System.DateTime> _TeacherCreateDate;
	
	private System.Nullable<int> _isExamTeacher;
	
	public Proc_SellectAllTeacherResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TId
	{
		get
		{
			return this._TId;
		}
		set
		{
			if ((this._TId != value))
			{
				this._TId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPwd", DbType="VarChar(50)")]
	public string TPwd
	{
		get
		{
			return this._TPwd;
		}
		set
		{
			if ((this._TPwd != value))
			{
				this._TPwd = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TName", DbType="VarChar(20)")]
	public string TName
	{
		get
		{
			return this._TName;
		}
		set
		{
			if ((this._TName != value))
			{
				this._TName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPhone", DbType="VarChar(20)")]
	public string TPhone
	{
		get
		{
			return this._TPhone;
		}
		set
		{
			if ((this._TPhone != value))
			{
				this._TPhone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Int")]
	public System.Nullable<int> IsAdmin
	{
		get
		{
			return this._IsAdmin;
		}
		set
		{
			if ((this._IsAdmin != value))
			{
				this._IsAdmin = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherState", DbType="Int")]
	public System.Nullable<int> TeacherState
	{
		get
		{
			return this._TeacherState;
		}
		set
		{
			if ((this._TeacherState != value))
			{
				this._TeacherState = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> TeacherCreateDate
	{
		get
		{
			return this._TeacherCreateDate;
		}
		set
		{
			if ((this._TeacherCreateDate != value))
			{
				this._TeacherCreateDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isExamTeacher", DbType="Int")]
	public System.Nullable<int> isExamTeacher
	{
		get
		{
			return this._isExamTeacher;
		}
		set
		{
			if ((this._isExamTeacher != value))
			{
				this._isExamTeacher = value;
			}
		}
	}
}

public partial class Proc_SellectTeacherInfoByTIdResult
{
	
	private string _TId;
	
	private string _TPwd;
	
	private string _TName;
	
	private string _TPhone;
	
	private System.Nullable<int> _IsAdmin;
	
	private System.Nullable<int> _TeacherState;
	
	private System.Nullable<System.DateTime> _TeacherCreateDate;
	
	private System.Nullable<int> _isExamTeacher;
	
	public Proc_SellectTeacherInfoByTIdResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TId
	{
		get
		{
			return this._TId;
		}
		set
		{
			if ((this._TId != value))
			{
				this._TId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPwd", DbType="VarChar(50)")]
	public string TPwd
	{
		get
		{
			return this._TPwd;
		}
		set
		{
			if ((this._TPwd != value))
			{
				this._TPwd = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TName", DbType="VarChar(20)")]
	public string TName
	{
		get
		{
			return this._TName;
		}
		set
		{
			if ((this._TName != value))
			{
				this._TName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPhone", DbType="VarChar(20)")]
	public string TPhone
	{
		get
		{
			return this._TPhone;
		}
		set
		{
			if ((this._TPhone != value))
			{
				this._TPhone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Int")]
	public System.Nullable<int> IsAdmin
	{
		get
		{
			return this._IsAdmin;
		}
		set
		{
			if ((this._IsAdmin != value))
			{
				this._IsAdmin = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherState", DbType="Int")]
	public System.Nullable<int> TeacherState
	{
		get
		{
			return this._TeacherState;
		}
		set
		{
			if ((this._TeacherState != value))
			{
				this._TeacherState = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherCreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> TeacherCreateDate
	{
		get
		{
			return this._TeacherCreateDate;
		}
		set
		{
			if ((this._TeacherCreateDate != value))
			{
				this._TeacherCreateDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isExamTeacher", DbType="Int")]
	public System.Nullable<int> isExamTeacher
	{
		get
		{
			return this._isExamTeacher;
		}
		set
		{
			if ((this._isExamTeacher != value))
			{
				this._isExamTeacher = value;
			}
		}
	}
}
#pragma warning restore 1591
